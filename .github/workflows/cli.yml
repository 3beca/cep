name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    env:
      CI: true
      IMAGE_NAME: francescorivola/tribeca-cep
      SERVICE_NAME: tribeca-cep

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        mongodb-version: [4.2]

    steps:
    - name: Git checkout
      uses: actions/checkout@v1

    - name: Start MongoDB v${{ matrix.mongodb-version }}
      uses: superchargejs/mongodb-github-action@1.1.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run lint
    - run: npm run test-ci

    - name: Publish Code Coverage
      if: github.ref == 'refs/heads/master'
      uses: codecov/codecov-action@v1

    - name: Docker Build and Publish
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ env.IMAGE_NAME }}
        tag_with_ref: true
        tag_with_sha: true

    - name: Copy Helm Chart via ssh
      if: github.ref == 'refs/heads/master'
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        source: "./charts/**"
        target: "./charts/${{ env.SERVICE_NAME }}"
        strip_components: 1
        rm: true

    - name: Deploy using Helm
      if: github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: helm upgrade ${{ env.SERVICE_NAME }} ./charts/${{ env.SERVICE_NAME }} --set image=${{ env.IMAGE_NAME }}:sha-$(echo ${{ github.sha }} | cut -c1-7) --set deployment.env.eventProcessingHttpBaseUrl=${{ secrets.EVENT_PROCESSING_HTTP_BASE_URL}} --install --wait
